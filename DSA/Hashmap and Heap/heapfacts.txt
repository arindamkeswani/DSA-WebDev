PriorityQueue<> pq = new PriorityQueue<>(); //interchangeable with heap\
Default: min-Priority
passing Collections.reverseOrder() as parameter will use max-priority

Operators:
pq.add(10);
pq.add(-10);
pq.peek();
pq.remove()//return ele with given priority (default minimum) so -10 will be returned

Addition and removal takes log(n). Peek takes constant time.
/////////////////////////////
import java.util.PriorityQueue;
import java.util.Collections;
public class Main{
    public static void main(String args[]){
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        
        pq.add(10);
        pq.add(-10);
        pq.add(1);
        pq.add(0);
        pq.add(105);
        pq.add(-100);
        pq.add(26);
        pq.add(45);
        pq.add(-310);
        // System.out.println(pq);
        
        while(pq.size() > 0){
            System.out.print(pq.remove() +"  ");
        }
    }
}
